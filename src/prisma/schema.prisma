// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id String @id @default(cuid())
  email String @unique
  name String?
  stripe Stripe?
  events Event[]
  tickets UserTicket[]
  likes Event[]@relation("likes")
  @@map("users")
}

model Event{
  id String @id @default(cuid())
  userId String
  user User@relation(fields: [userId], references: [id])
  likedUsers User[]@relation("likes")
  title String
  organizer String
  type String
  category String
  subCategory String?
  location String
  starts DateTime
  ends DateTime
  displayStart Boolean@default(true)
  displayEnd Boolean@default(true)
  recurrence String?
  summary String?
  description String?
  image String?
  tickets AdminTicket[]
  views Int@default(0)
  questions String[]
  answers String[]
  withdrawalRequests WithdrawalRequest[]
  published Boolean@default(false)
  publishDate DateTime?
  @@map("events")
}

model AdminTicket{
  id String @id @default(cuid())
  eventId String
  event Event@relation(fields: [eventId], references: [id])
  productId String @unique
  type String
  description String
  price Float
  available Int
  displayAvailable Boolean@default(true)
  sold Int@default(0)
  tickets UserTicket[]
  labels String[]
  optionals Boolean[]
  @@map("admin_tickets")
}

model UserTicket{
  id String @id @default(cuid())
  slNo Int
  email String
  name String?
  phone String?
  checkoutSessionId String@unique
  ticketId String
  ticket AdminTicket@relation(fields: [ticketId], references: [id])
  scanned Boolean@default(false)
  userId String?
  user User?@relation(fields: [userId], references: [id])
  stripeId String?
  stripe Stripe?@relation(fields: [stripeId], references: [id])
  labels String[]
  values String[]
  createdAt DateTime @default(now())
  @@map("user_tickets")
  @@unique([ticketId, slNo])
}

model WithdrawalRequest{
  id String @id @default(uuid())
  eventId String
  event Event @relation(fields: [eventId], references: [id])
  createdAt DateTime @default(now())
  transitNumber Int
  institutionNumber Int
  accountNumber Int
  approved Boolean @default(false)
  @@map("withdrawal_requests")
}

model Stripe{
  id String @id @default(uuid())
  email String @unique
  name String?
  phone String?
  userId String?@unique
  user User?@relation(fields: [userId], references: [id])
  tickets UserTicket[]
  @@map("stripe_users")
}